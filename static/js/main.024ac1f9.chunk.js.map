{"version":3,"sources":["services/userAPI.js","pages/Loading/Loading.jsx","pages/Login/Login.jsx","pages/Header/Header.jsx","services/searchAlbumsAPI.js","pages/Search/Search.jsx","services/favoriteSongsAPI.js","services/musicsAPI.js","pages/MusicCard/MusicCard.jsx","pages/Album/Album.jsx","pages/Favorites/Favorites.jsx","pages/Profile/Profile.jsx","pages/ProfileEdit/ProfileEdit.jsx","pages/NotFound/NotFound.jsx","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Loading","Component","Login","handleChange","value","target","setState","userName","userSet","state","loadingScreen","a","logged","this","className","to","action","htmlFor","type","placeholder","onChange","disabled","length","onClick","Header","loading","getName","request","exact","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","Search","setAlbum","search","albuns","album","src","alt","undefined","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","getMusics","id","requestJson","MusicCard","props","addSongFav","music","getFavs","removeSongFav","checked","favorite","isFavorite","trackName","previewUrl","controls","kind","Album","favorites","favoriteSong","some","musicId","match","getMusic","params","filtered","musics","track","Favorites","getFavorites","favo","favs","item","Profile","userEmail","userImage","userDescription","console","log","ProfileEdit","validation","test","handleClick","userInfo","redirect","NotFound","App","basename","process","path","component","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.024ac1f9.chunk.js","sourcesContent":["const USER_KEY = 'user';\r\nconst TIMEOUT = 1500;\r\nconst SUCCESS_STATUS = 'OK';\r\n\r\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\r\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\r\n\r\n// --------------------------------------------------------------------\r\n// A função simulateRequest simula uma requisição para uma API externa\r\n// Esse tipo de função que \"chama outra função\" é chamada de\r\n// \"currying function\" https://javascript.info/currying-partials\r\n// não se preocupe, estudaremos isso mais futuramente\r\n// --------------------------------------------------------------------\r\n\r\nconst simulateRequest = (response) => (callback) => {\r\n  setTimeout(() => {\r\n    callback(response);\r\n  }, TIMEOUT);\r\n};\r\n\r\nexport const getUser = () => new Promise((resolve) => {\r\n  let user = readUser();\r\n  if (user === null) {\r\n    user = {};\r\n  }\r\n  simulateRequest(user)(resolve);\r\n});\r\n\r\nexport const createUser = (user) => new Promise((resolve) => {\r\n  const emptyUser = {\r\n    name: '',\r\n    email: '',\r\n    image: '',\r\n    description: '',\r\n  };\r\n  saveUser({ ...emptyUser, ...user });\r\n  simulateRequest(SUCCESS_STATUS)(resolve);\r\n});\r\n\r\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\r\n  saveUser({ ...updatedUser });\r\n  simulateRequest(SUCCESS_STATUS)(resolve);\r\n});\r\n","import React, { Component } from 'react';\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Carregando...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { createUser } from '../../services/userAPI';\r\nimport Loading from '../Loading/Loading';\r\nimport './login.css';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      userName: '',\r\n      loadingScreen: false,\r\n    };\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    const { value } = target;\r\n    this.setState({ userName: value });\r\n  }\r\n\r\n  userSet = () => {\r\n    const { userName } = this.state;\r\n    this.setState({ loadingScreen: true }, async () => {\r\n      await createUser({ name: userName });\r\n      this.setState({ loadingScreen: false, logged: true });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { userName, loadingScreen, logged } = this.state;\r\n    const min = 3;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"div-image\">\r\n          {\r\n            loadingScreen ? <Loading /> : ''\r\n          }\r\n        </div>\r\n        <div className=\"login-div\" data-testid=\"page-login\">\r\n          {\r\n            logged ? <Redirect to=\"/search\" /> : ''\r\n          }\r\n          <form className=\"login-form\" action=\"\">\r\n            <label htmlFor=\"userName\">\r\n              <input\r\n                className=\"login-input\"\r\n                name=\"userName\"\r\n                type=\"text\"\r\n                placeholder=\"Nome\"\r\n                onChange={ this.handleChange }\r\n                value={ userName }\r\n                data-testid=\"login-name-input\"\r\n              />\r\n            </label>\r\n            <button\r\n              className=\"login-button\"\r\n              type=\"button\"\r\n              data-testid=\"login-submit-button\"\r\n              disabled={ userName.length < min }\r\n              onClick={ this.userSet }\r\n            >\r\n              Entrar\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getUser } from '../../services/userAPI';\r\nimport Loading from '../Loading/Loading';\r\nimport './header.css';\r\n\r\nclass Header extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loading: true,\r\n      getName: '',\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const request = await getUser();\r\n    this.setState({ getName: request.name, loading: false });\r\n  }\r\n\r\n  render() {\r\n    const { getName, loading } = this.state;\r\n    return (\r\n      <header data-testid=\"header-component\">\r\n\r\n        <div className=\"div-name\">\r\n          <div className='img-logo'>\r\n            <hr />\r\n          </div>\r\n          {\r\n          loading\r\n            ? <Loading />\r\n            : ''\r\n          }\r\n          <p\r\n            data-testid=\"header-user-name\"\r\n            className=\"p-div\"\r\n          >\r\n            { getName }\r\n          </p>\r\n        </div>\r\n        <nav className=\"nav-header\">\r\n          <Link\r\n            data-testid=\"link-to-search\"\r\n            exact\r\n            to=\"/search\"\r\n            className=\"search-nav\"\r\n          >\r\n            Search\r\n          </Link>\r\n          <Link\r\n            data-testid=\"link-to-favorites\"\r\n            exact\r\n            to=\"/favorites\"\r\n            className=\"favorites-nav\"\r\n          >\r\n            Favorites\r\n          </Link>\r\n          <Link\r\n            data-testid=\"link-to-profile\"\r\n            exact\r\n            to=\"/profile\"\r\n            className=\"profile-nav\"\r\n          >\r\n            Profile\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","const searchAlbumsAPI = async (artist) => {\r\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\r\n\r\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\r\n\r\n  const APIResponse = await fetch(getAlbumsAPI);\r\n\r\n  const { results } = await APIResponse.json();\r\n\r\n  const response = results.map(\r\n    ({\r\n      artistId,\r\n      artistName,\r\n      collectionId,\r\n      collectionName,\r\n      collectionPrice,\r\n      artworkUrl100,\r\n      releaseDate,\r\n      trackCount,\r\n    }) => ({\r\n      artistId,\r\n      artistName,\r\n      collectionId,\r\n      collectionName,\r\n      collectionPrice,\r\n      artworkUrl100,\r\n      releaseDate,\r\n      trackCount,\r\n    }),\r\n  );\r\n  return response;\r\n};\r\n\r\nexport default searchAlbumsAPI;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\nimport searchAlbumsAPI from '../../services/searchAlbumsAPI';\r\nimport Loading from '../Loading/Loading';\r\nimport './search.css';\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      artistName: '',\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    const { value } = target;\r\n    this.setState({ artistName: value });\r\n  }\r\n\r\n  setAlbum = () => {\r\n    this.setState({ loading: true }, async () => {\r\n      const { artistName } = this.state;\r\n      const request = await searchAlbumsAPI(artistName);\r\n      this.setState({\r\n        search: artistName,\r\n        artistName: '',\r\n        loading: false,\r\n        albuns: request,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { artistName, loading, search, albuns } = this.state;\r\n    const min = 2;\r\n    return (\r\n      <div data-testid=\"page-search\">\r\n        <Header />\r\n        <form className=\"form-search\" action=\"\">\r\n          {\r\n            loading\r\n              ? <Loading />\r\n              : (\r\n                <div className=\"div-form\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Digite o nome do artista\"\r\n                    data-testid=\"search-artist-input\"\r\n                    className=\"input-search\"\r\n                    onChange={ this.handleChange }\r\n                    value={ artistName }\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    data-testid=\"search-artist-button\"\r\n                    className=\"button-search\"\r\n                    disabled={ artistName.length < min }\r\n                    onClick={ this.setAlbum }\r\n                  >\r\n                    Procurar\r\n                  </button>\r\n                </div>\r\n              )\r\n          }\r\n\r\n        </form>\r\n        <div>\r\n          {\r\n            albuns\r\n              ? (\r\n                <div className=\"album-search\">\r\n                  <div className=\"name\">\r\n                    <h2>\r\n                      {`Resultado de álbuns de: ${search}`}\r\n                    </h2>\r\n                  </div>\r\n                  {\r\n                    albuns.map((album) => (\r\n                      <div\r\n                        key={ album.collectionId }\r\n                        className=\"album\"\r\n                      >\r\n                        <h3>{ album.collectionName }</h3>\r\n                        <Link\r\n                          to={ `/album/${album.collectionId}` }\r\n                          data-testid={ `link-to-album-${album.collectionId}` }\r\n                        >\r\n                          Album\r\n                        </Link>\r\n                        <p>{ album.artistName }</p>\r\n                        <img src={ album.artworkUrl100 } alt={ album.collectionName } />\r\n                      </div>\r\n                    ))\r\n                  }\r\n                </div>\r\n              )\r\n              : ''\r\n          }\r\n          {\r\n            albuns !== undefined && !albuns.length\r\n              ? <p>Nenhum álbum foi encontrado</p>\r\n              : ''\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\r\nconst TIMEOUT = 500;\r\nconst SUCCESS_STATUS = 'OK';\r\n\r\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\r\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\r\n}\r\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\r\n\r\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\r\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\r\n\r\n// --------------------------------------------------------------------\r\n// A função simulateRequest simula uma requisição para uma API externa\r\n// Esse tipo de função que \"chama outra função\" é chamada de\r\n// \"currying function\" https://javascript.info/currying-partials\r\n// não se preocupe, estudaremos isso futuramente.\r\n// --------------------------------------------------------------------\r\n\r\nconst simulateRequest = (response) => (callback) => {\r\n  setTimeout(() => {\r\n    callback(response);\r\n  }, TIMEOUT);\r\n};\r\n\r\nexport const getFavoriteSongs = () => new Promise((resolve) => {\r\n  const favoriteSongs = readFavoriteSongs();\r\n  simulateRequest(favoriteSongs)(resolve);\r\n});\r\n\r\nexport const addSong = (song) => new Promise((resolve) => {\r\n  if (song) {\r\n    const favoriteSongs = readFavoriteSongs();\r\n    saveFavoriteSongs([...favoriteSongs, song]);\r\n  }\r\n  simulateRequest(SUCCESS_STATUS)(resolve);\r\n});\r\n\r\nexport const removeSong = (song) => new Promise((resolve) => {\r\n  const favoriteSongs = readFavoriteSongs();\r\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\r\n  simulateRequest(SUCCESS_STATUS)(resolve);\r\n});\r\n","const getMusics = async (id) => {\r\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\r\n  const requestJson = await request.json();\r\n  return requestJson.results;\r\n};\r\n\r\nexport default getMusics;\r\n","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { addSong, removeSong } from '../../services/favoriteSongsAPI';\r\nimport Loading from '../Loading/Loading';\r\nimport './musicCard.css';\r\n\r\nclass MusicCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { isFavorite } = this.props;\r\n    this.state = {\r\n      loading: false,\r\n      favorite: isFavorite,\r\n    };\r\n  }\r\n\r\n  addSongFav = () => {\r\n    this.setState({ loading: true }, async () => {\r\n      const { music, getFavs } = this.props;\r\n      await addSong(music);\r\n      await getFavs();\r\n      this.setState({ loading: false });\r\n    });\r\n  }\r\n\r\n  removeSongFav = () => {\r\n    this.setState({ loading: true }, async () => {\r\n      const { music, getFavs } = this.props;\r\n      await removeSong(music);\r\n      await getFavs();\r\n      this.setState({ loading: false });\r\n    });\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    const { checked } = target;\r\n    this.setState({ favorite: checked }, async () => {\r\n      if (checked) {\r\n        this.addSongFav();\r\n      } else {\r\n        this.removeSongFav();\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { trackName, previewUrl, trackId, artistName, collectionName, artworkUrl100 } = this.props;\r\n    const { loading, favorite } = this.state;\r\n    return (\r\n      <div>\r\n        {\r\n          loading\r\n            ? <Loading />\r\n            : ''\r\n        }\r\n        <div className=\"card-content\">\r\n          <img src={ artworkUrl100 } alt={ artistName } />\r\n          <hr />\r\n          <h2>{ artistName }</h2>\r\n          <span>{ collectionName }</span>\r\n          <p>{ trackName }</p>\r\n          <audio data-testid=\"audio-component\" src={ previewUrl } controls>\r\n            <track kind=\"captions\" />\r\n            O seu navegador não suporta o elemento\r\n            {' '}\r\n            <code>audio</code>\r\n            .\r\n          </audio>\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label htmlFor={ trackName }>\r\n            Favorita\r\n            <input\r\n              id={ trackName }\r\n              type=\"checkbox\"\r\n              onChange={ this.handleChange }\r\n              checked={ favorite }\r\n              data-testid={ `checkbox-music-${trackId}` }\r\n            />\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMusicCard.propTypes = {\r\n  trackName: propTypes.string.isRequired,\r\n  previewUrl: propTypes.string.isRequired,\r\n  trackId: propTypes.number.isRequired,\r\n  music: propTypes.shape({}).isRequired,\r\n  getFavs: propTypes.func.isRequired,\r\n  isFavorite: propTypes.bool.isRequired,\r\n};\r\n\r\nexport default MusicCard;\r\n","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { getFavoriteSongs } from '../../services/favoriteSongsAPI';\r\nimport Header from '../Header/Header';\r\nimport getMusic from '../../services/musicsAPI';\r\nimport Loading from '../Loading/Loading';\r\nimport MusicCard from '../MusicCard/MusicCard';\r\nimport './album.css';\r\n\r\nclass Album extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { match } = this.props;\r\n    // console.log(match);\r\n    const request = await getMusic(match.params.id);\r\n    // console.log(request);\r\n    const filtered = request.filter((music) => music.kind === 'song');\r\n    // console.log(filtered);\r\n    const favorites = await getFavoriteSongs();\r\n    // console.log(favorites)\r\n    this.setState({\r\n      musics: filtered,\r\n      album: request[0],\r\n      loading: false,\r\n      favoriteSong: favorites,\r\n    });\r\n  }\r\n\r\n  getFavs = async () => {\r\n    const favorites = await getFavoriteSongs();\r\n    this.setState({ favoriteSong: favorites });\r\n    // console.log(favorites);\r\n  }\r\n\r\n  isFavorite = (id) => {\r\n    const { favoriteSong } = this.state;\r\n    // console.log(favs);\r\n    const validation = favoriteSong.some((musicId) => musicId.trackId === id);\r\n    if (validation) return true;\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    const { album, loading, musics } = this.state;\r\n    return (\r\n      <div data-testid=\"page-album\">\r\n        <Header />\r\n        {\r\n          loading\r\n            ? <Loading />\r\n            : (\r\n              <div className=\"container\">\r\n                <div className=\"pricipal-div\">\r\n                  <h2 data-testid=\"artist-name\">{ album.artistName }</h2>\r\n                  <img className=\"img-album\" src={ album.artworkUrl100 } alt={ album.trackName } />\r\n                  <p data-testid=\"album-name\">{ album.collectionName }</p>\r\n                </div>\r\n                <div className=\"album-div\">\r\n                  {\r\n                    musics.map((track) => (\r\n                      <div\r\n                        key={ track.trackId }\r\n                        className=\"map-card\"\r\n                      >\r\n                        <MusicCard\r\n                          key={ track.trackId }\r\n                          trackName={ track.trackName }\r\n                          previewUrl={ track.previewUrl }\r\n                          trackId={ track.trackId }\r\n                          music={ track }\r\n                          getFavs={ this.getFavs }\r\n                          isFavorite={ this.isFavorite(track.trackId) }\r\n                        />\r\n                      </div>\r\n                    ))\r\n                  }\r\n                </div>\r\n              </div>\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// https://pt-br.reactjs.org/docs/typechecking-with-proptypes.html\r\n\r\nAlbum.propTypes = {\r\n  match: propTypes.shape({\r\n    params: propTypes.shape({\r\n      id: propTypes.string.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Album;\r\n","import React, { Component } from 'react';\r\nimport Header from '../Header/Header';\r\nimport { getFavoriteSongs } from '../../services/favoriteSongsAPI';\r\nimport Loading from '../Loading/Loading';\r\nimport MusicCard from '../MusicCard/MusicCard';\r\n\r\nclass Favorites extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loading: true,\r\n      favs: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getFavorites();\r\n  }\r\n\r\n  getFavorites = async () => {\r\n    this.setState({ loading: true }, async () => {\r\n      const favo = await getFavoriteSongs();\r\n      this.setState({\r\n        favs: favo,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { favs, loading } = this.state;\r\n    // console.log(favs);\r\n    return (\r\n      <div data-testid=\"page-favorites\">\r\n        <Header />\r\n        {\r\n          loading\r\n            ? <Loading />\r\n            : (\r\n              <div className=\"album-div\">\r\n                {\r\n                  favs.map((item) => (\r\n                    <div\r\n                      key={ item.trackName }\r\n                      className=\"map-card\"\r\n                    >\r\n                      <MusicCard\r\n                        key={ item.trackId }\r\n                        artworkUrl100={ item.artworkUrl100 }\r\n                        artistName={ item.artistName }\r\n                        collectionName={ item.collectionName }\r\n                        trackName={ item.trackName }\r\n                        previewUrl={ item.previewUrl }\r\n                        trackId={ item.trackId }\r\n                        music={ item }\r\n                        getFavs={ this.getFavorites }\r\n                        isFavorite\r\n                      />\r\n                    </div>\r\n                  ))\r\n                }\r\n              </div>\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Favorites;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\nimport Loading from '../Loading/Loading';\r\nimport { getUser } from '../../services/userAPI';\r\nimport './profile.css';\r\n\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loading: true,\r\n      userName: '',\r\n      userEmail: '',\r\n      userImage: '',\r\n      userDescription: '',\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const user = await getUser();\r\n    this.setState({\r\n      loading: false,\r\n      userName: user.name,\r\n      userEmail: user.email,\r\n      userImage: user.image,\r\n      userDescription: user.description,\r\n    });\r\n    console.log(user);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      userName,\r\n      userEmail,\r\n      userImage,\r\n      userDescription,\r\n    } = this.state;\r\n    return (\r\n      <div data-testid=\"page-profile\">\r\n        <Header />\r\n        {\r\n          loading\r\n            ? <Loading />\r\n            : (\r\n              <div className=\"div-profile\">\r\n                <img\r\n                  className=\"img-perfil\"\r\n                  data-testid=\"profile-image\"\r\n                  src={ userImage }\r\n                  alt={ userName }\r\n                />\r\n                <p className='profile-p'>Nome:</p>\r\n                <strong>\r\n                  { userName }\r\n                </strong>\r\n                <p className='profile-p'>Email:</p>\r\n                <strong>\r\n                  { userEmail }\r\n                </strong>\r\n                <p className='profile-p'>Descrição:</p>\r\n                <strong>\r\n                  { userDescription }\r\n                </strong>\r\n                <button className='editar-perfil'>\r\n                  <Link className='link' exact to=\"/profile/edit\">Editar perfil</Link>\r\n                </button>\r\n              </div>\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getUser, updateUser } from '../../services/userAPI';\r\nimport Header from '../Header/Header';\r\nimport Loading from '../Loading/Loading';\r\nimport './profile-edit.css';\r\n\r\nclass ProfileEdit extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loading: true,\r\n      redirect: false,\r\n      disabled: true,\r\n      name: '',\r\n      email: '',\r\n      image: '',\r\n      description: '',\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const user = await getUser();\r\n    const { name, email, description, image } = user;\r\n    this.setState({\r\n      loading: false,\r\n      name,\r\n      email,\r\n      description,\r\n      image,\r\n    });\r\n    this.validation();\r\n  }\r\n\r\n  validation = () => {\r\n    const {\r\n      name,\r\n      email,\r\n      image,\r\n      description,\r\n    } = this.state;\r\n    const regex = /\\S+@\\S+\\.\\S+/;\r\n    if (name && regex.test(email) && description && image) {\r\n      return this.setState({\r\n        disabled: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClick = async () => {\r\n    this.setState({ loading: true });\r\n    const {\r\n      name,\r\n      email,\r\n      description,\r\n      image,\r\n    } = this.state;\r\n    const userInfo = {\r\n      name,\r\n      email,\r\n      description,\r\n      image,\r\n    };\r\n    await updateUser(userInfo);\r\n    this.setState({\r\n      loading: false,\r\n      redirect: true,\r\n    });\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    const { value, name } = target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n    this.validation();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      disabled,\r\n      loading,\r\n      redirect,\r\n      name,\r\n      email,\r\n      image,\r\n      description,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div data-testid=\"page-profile-edit\">\r\n        <Header />\r\n        {\r\n          redirect ? <Redirect to=\"/profile\" />\r\n            : ''\r\n        }\r\n        {\r\n          loading ? <Loading />\r\n            : (\r\n              <form className='div-edit'>\r\n                <img\r\n                src={ image }\r\n                className=\"img-perfil\"\r\n                alt={ name } \r\n                />\r\n                <input\r\n                  value={ image }\r\n                  onChange={ this.handleChange }\r\n                  name=\"image\"\r\n                  type=\"text\"\r\n                  className=\"img-input\"\r\n                  placeholder=\"Coloque a URL da foto aqui\"\r\n                  data-testid=\"edit-input-image\"\r\n                />\r\n                <label htmlFor=\"name\">\r\n                  Nome\r\n                </label>\r\n                  <input\r\n                    onChange={ this.handleChange }\r\n                    value={ name }\r\n                    name=\"name\"\r\n                    className=\"name-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Digite seu nome aqui\"\r\n                    data-testid=\"edit-input-name\"\r\n                  />\r\n                \r\n                <label htmlFor=\"email\">\r\n                  Email\r\n                </label>\r\n                  <input\r\n                    onChange={ this.handleChange }\r\n                    value={ email }\r\n                    name=\"email\"\r\n                    className=\"email-input\"\r\n                    type=\"text\"\r\n                    placeholder=\"Digite seu email aqui\"\r\n                    data-testid=\"edit-input-email\"\r\n                  />\r\n                <label htmlFor=\"description\">\r\n                  Descrição:\r\n                </label>\r\n                  <textarea\r\n                    onChange={ this.handleChange }\r\n                    value={ description }\r\n                    name=\"description\"\r\n                    placeholder=\"Sobre mim\"\r\n                    className=\"description-input\"\r\n                    data-testid=\"edit-input-description\"\r\n                  />\r\n                <button\r\n                  type=\"button\"\r\n                  data-testid=\"edit-button-save\"\r\n                  className=\"button-save\"\r\n                  disabled={ disabled }\r\n                  onClick={ this.handleClick }\r\n                >\r\n                  Salvar perfil\r\n                </button>\r\n              </form>\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileEdit;\r\n","import React, { Component } from 'react';\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div data-testid=\"page-not-found\">\r\n        <strong>ERROR 404</strong>\r\n        <h1>Desculpe não há nada por aqui</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Switch, BrowserRouter, Route } from 'react-router-dom';\r\nimport Login from './pages/Login/Login';\r\nimport Search from './pages/Search/Search';\r\nimport Album from './pages/Album/Album';\r\nimport Favorites from './pages/Favorites/Favorites';\r\nimport Profile from './pages/Profile/Profile';\r\nimport ProfileEdit from './pages/ProfileEdit/ProfileEdit';\r\nimport NotFound from './pages/NotFound/NotFound';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={ Login } />\r\n            <Route exact path=\"/search\" component={ Search } />\r\n            <Route path=\"/album/:id\" component={ Album } />\r\n            <Route exact path=\"/favorites\" component={ Favorites } />\r\n            <Route exact path=\"/profile\" component={ Profile } />\r\n            <Route exact path=\"/profile/edit\" component={ ProfileEdit } />\r\n            <Route path=\"*\" component={ NotFound } />\r\n          </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}